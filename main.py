from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio
import os
from loguru import logger
from dotenv import load_dotenv, find_dotenv

# load_dotenv(find_dotenv())
# TOKEN = os.getenv("TOKEN")
# CHANNEL_ID = os.getenv("CHANNEL_ID")

load_dotenv(find_dotenv())
TOKEN = os.getenv("TOKEN")

bot = Bot(token=TOKEN)
logger.info("–°–æ–∑–¥–∞–Ω –±–æ—Ç")
dp = Dispatcher()
logger.info("–°–æ–∑–¥–∞–Ω –î–∏—Å–ø–µ—Ç—á–µ—Ä")

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "üî¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
        "‚Ä¢ 2 + 2\n"
        "‚Ä¢ 3.5 * 4\n"
        "‚Ä¢ (10 - 3) / 2"
    )

@dp.message()
async def calculate(message: types.Message):
    try:
        expr = message.text.strip()
        if any(c not in "0123456789+-*/(). " for c in expr):
            raise ValueError("–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")

        result = eval(expr)  # –û–ø–∞—Å–Ω–æ! –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
        await message.answer(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {e}\n\n–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–∏–º–µ—Ä: <code>2 + 2 * 2</code>", parse_mode="HTML")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


